---
# -----------------
# YAML Templates
# -----------------
# Integration tests
_integration-tests: &integration-tests
  os: linux
  sudo: required
  language: minimal
  services: docker
  cache:
    directories:
      - node_modules
      - plugins/available/kuzzle-plugin-auth-passport-local/node_modules
      - plugins/available/kuzzle-plugin-logger/node_modules
  env: &integration-tests-env
    - NODE_LTS=8
    - DOCKER_PROXY_TAG=$(if [ "${TRAVIS_BRANCH}" != "master" ]; then echo ":develop"; fi)
    - DOCKER_COMPOSE_TEST=test
  install:
    - sudo sysctl -w vm.max_map_count=262144
  script:
    - docker-compose -f .ci/$DOCKER_COMPOSE_TEST.yml run kuzzle

# Documentation deployment
_doc-deploy: &doc-deploy
  stage: Deployments
  language: node_js
  node_js: 10
  env: &doc-deploy-env
    - NODE_ENV=production
    - AWS_DEFAULT_REGION=us-west-2
    - AWS_ACCESS_KEY_ID=AKIAIYAXFUAHXOWP2MJA
    # AWS_SECRET_ACCESS_KEY in Travis CI UI
  cache:
    npm: true
    directories:
      - $HOME/.cache/pip
  addons:
    apt:
      packages:
        - python
        - python-pip
  install:
    - pip install awscli --upgrade --user
    - npm ci
  script:
    - npm run doc-prepare
    - npm run doc-build
  deploy:
    provider: script
    script:
      - npm run doc-upload
    skip_cleanup: true
  after_deploy:
    - npm run doc-cloudfront

# ------------------------
# Jobs configuration
# ------------------------
jobs:
  include:
    # ---------------------------------------
    # Unit Tests & Linters
    # ---------------------------------------
    - stage: Unit Tests & Linters
      name: Unit Tests & ESLint
      os: linux
      sudo: required
      language: node_js
      node_js: 10
      install:
        - npm ci --silent
      script:
        - npm run --silent lint
        - npm run unit-testing
      after_success:
        - npm run codecov

    - stage: Unit Tests & Linters
      name: Documentation dead links & error codes check
      language: node_js
      node_js: 12
      cache:
        directories:
          - $HOME/.gem/specs
      env:
        - REPOSITORIES=kuzzle-how-to,sdk-javascript-5,sdk-javascript-6,plugin-s3-1,sdk-php-3,plugin-cloudinary-1,sdk-cpp-1,sdk-csharp-1,sdk-go-1,sdk-go-2,sdk-java-1,sdk-java-2,kuzzle-1,sdk-android-3,plugin-multi-tenancy-1
      install:
        - gem install typhoeus
        - npm ci --silent
      before_script:
        - npm run doc-prepare
        - $(npm bin)/kuzdoc iterate-repos:install --repos_path doc/framework/.repos/
        - $(npm bin)/kuzdoc framework:link -d /core/1/ -v 1
      script:
        - echo "Checking dead links..."
        - cd doc/framework/ && HYDRA_MAX_CONCURRENCY=20 ruby .ci/dead-links.rb -p src/core/1/ && cd ../../
        - echo "Checking error codes..."
        - npm run doc-error-codes -- --output $TRAVIS_BUILD_DIR/codes-doc-test.md
        - diff $TRAVIS_BUILD_DIR/codes-doc-test.md $TRAVIS_BUILD_DIR/doc/1/api/essentials/errors/codes/index.md

    # ---------------------------------------
    # Integration tests
    # ---------------------------------------
    - <<: *integration-tests
      stage: Integration tests
      if: branch =~ /^master|[0-9]+-(dev|stable)$/
      name: Node.js 6
      env:
        - *integration-tests-env
        - NODE_LTS=6


    - <<: *integration-tests
      stage: Integration tests
      if: type = cron
      name: Node.js 8
      env:
        - *integration-tests-env


    - <<: *integration-tests
      stage: Integration tests
      if: type = cron
      name: Node.js 10
      env:
        - *integration-tests-env
        - NODE_LTS=10

    # ---------------------------------------
    # Cross-platform tests
    # ---------------------------------------
    - <<: *integration-tests
      name: Linux ARMHF
      stage: Cross-platform tests
      env:
        - *integration-tests-env
        - ARM=armhf
        - DOCKER_COMPOSE_TEST=test-$ARM
      before_script:
        - docker run --rm --privileged multiarch/qemu-user-static:register
        - docker run --rm -it -v "$(pwd)":/mnt kuzzleio/sdk-cross:node8-$ARM ./.ci/scripts/install-$ARM-deps.sh

    - <<: *integration-tests
      name: Linux ARM64
      stage: Cross-platform tests
      env:
        - *integration-tests-env
        - ARM=aarch64
        - DOCKER_COMPOSE_TEST=test-$ARM
      before_script:
        - docker run --rm --privileged multiarch/qemu-user-static:register
        - docker run --rm -it -v "$(pwd)":/mnt kuzzleio/sdk-cross:node8-$ARM ./.ci/scripts/install-$ARM-deps.sh

    # ---------------------------------------
    # Redis Tests
    # ---------------------------------------
    - <<: *integration-tests
      name: Redis 3
      stage: Redis tests
      env:
        - *integration-tests-env
        - REDIS_VERSION=3.2

    - <<: *integration-tests
      name: Redis 4
      stage: Redis tests
      env:
        - *integration-tests-env
        - REDIS_VERSION=4.0.14

    # ---------------------------------------
    # Deployments
    # ---------------------------------------
    - stage: Deployments
      name: NPM.js
      if: branch = master
      os: linux
      sudo: required
      language: node_js
      node_js: 10
      script: echo "Deploying Kuzzle to NPM.js"
      deploy:
        provider: npm
        email: support@kuzzle.io
        api_key:
          secure: gqLBt1Scnr8wAR0zauW3jI7M576Jr7d+d2C5gvCA+iI1Y6gBWMM04A3w1MHHcPUBNA+xbwNimyoxbrBozq7otiMEDbP5ConS+T3KRWyHYwjdSfmL5KmEoNqwjmo128qJq2uWFxEecBmBk63q9A3gbnhdw3/D+05NKL4B44PpyNDpT6fApsVyDNXQmeib6cYfjwB1rCv8Mcf2sbVE1eqcJuGTwDtxx/860405PqBSg7H8iGGJJr7cymaU8cK4RLre+u8GHRiSDoKeU1UiWIoIoLG0y8TisFllSstZu9kguA6ShPJJA28NLiNyJ7j0KxKW6muvY03AFxa4XQ0sMaxotjQxN3IRUnLdN1mnQydWqMRP2+HWK1uRXCiDoL9ZnSClS1BixSAv15tvhggqE76Rq4uGCcl7hYfagpUzQpsUIV40Wc7CHez/O4ZvvicWIOdo2jmh/6fRYWOFY2+ihzwszaZwAQT1cdTm75JMIqrATyNWEZvwvczQzC85HmJajhf1azyEY08kdIJxwmwh30AMl2Is0vlq9ujCp8XRsanbdj74CcDNf9RSgesiD83McLd/ZJZHSDIe//wNypcTcW4fQbSfGb1oDHWVLQ6L/jr+W3OJUgVBG31mMciGo2jSROOos8n4iHHqs3QbxTwh0B+t+1amvZlpelFUEoicprPCcN8=
        on:
          repo: kuzzleio/kuzzle
          branch: master
          tags: true

    - stage: Deployments
      name: Dockerhub
      os: linux
      sudo: required
      language: minimal
      services: docker
      script:
        - MODE=production bash build-docker-images.sh

    - <<: *doc-deploy
      name: Documentation to next-docs.kuzzle.io
      if: branch =~ /^[0-9]+-dev$/
      env:
        - *doc-deploy-env
        - BRANCH=dev
        - S3_BUCKET=docs-next.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E2ZCCEK9GRB49U

    - <<: *doc-deploy
      name: Deploy docs.kuzzle.io
      if: branch =~ /^master|[0-9]+-stable$/
      env:
        - *doc-deploy-env
        - S3_BUCKET=docs.kuzzle.io
        - CLOUDFRONT_DISTRIBUTION_ID=E3D6RP0POLCJMM

# ------------------------
# Stages configuration
# ------------------------
stages:
  - name: Unit Tests & Linters
    if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  - name: Integration tests
    if: type =~ /(cron|push|pull_request)/ AND branch =~ /^master|[0-9]+-(dev|stable)$/
  - name: Cross-platform tests
    if: type = cron
  - name: Redis tests
    if: type = cron
  - name: Deployments
    if: type = push AND branch =~ /^master|[0-9]+-(dev|stable)$/

# ---------------------------------------
# Notifications
# ---------------------------------------
notifications:
  slack:
    rooms:
      - secure: nx2W8a0wTPUfMFfR0TQxoA+M0ExUAJxIBy1AfKRlJXHaXN3al+SjLNXDU/OdplN9doae8BhcpHJBLiCDfQFY5Wmmbuxq2wAWhrPduIMPZFttBuxkoWkAbrhzYPsk5t7vERrJbSAynNbKeVL1gj7zitStJxzJzT2Z8y//9KYwXty3hPMJei2R1GCLTIOYp0ddq1Uu02Sdhkg07IO+bCrv5q6NFOpnx27SjYEBIOX66bVnGUcUzrbFQM1WToHwFHU3ylZUbj+zJHu+njj9SNTaoR7nIl6oedHCtloagTxyqjLQ0k3E9O4D5fuVvanKDAnLXrlPHWwNoEjffUMQ/b8OtTpgjB6pTr8Xu5oMN4tb5AbofdFOYIyumhHEN7Yt9t1sI6mYMEPu8GfAUTNHS41QfJakGRjYWOMoWQD4sOwRi8VRx+wOkvGSF75wsIrRM30qOkU4cXjoe44My7OkJKycz5AlvR8Drow5d8FO7N4C8olNM4MyP1Ofs2ulXYVEXEXV9NxuRIpcejx8UUZfBNjHnLsAjgq4sWyey22vTxIlmzc1dN3AngiScNdU7u2emZVBmC9VSLN2hAduA1y7HxESpqxd7+9v8qKxeSYw2j1V1sh2nvOvKah2Y61erDWjOI/eAxQPnT/uF4yoHC3dFnW9j9tCej0vZ0PeIBCUIKb5mx8=
    on_success: never
    on_failure: always
