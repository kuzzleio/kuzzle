#!/usr/bin/env node

/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2020 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

const yargs = require('yargs');
const Context = require('./.upgrades/lib/context');

const args = yargs
  .usage('USAGE: $0 [OPTIONS]')
  .options({
    C: {
      default: false,
      describe: 'Disable colored messages in the terminal',
      group: 'General',
      type: 'boolean',
    },
    R: {
      default: false,
      describe: 'Disable upgrades report in a log file',
      group: 'General',
      type: 'boolean',
    },
    output: {
      alias: 'o',
      default: `upgrade-${Date.now()}.report`,
      describe: 'Upgrade logs file name',
      group: 'General',
      type: 'string',
    },
    'storage-page-size': {
      default: 50,
      describe: 'Size of a storage page when moving data around',
      group: 'Advanced',
      type: 'number',
    },
  })
  .strict(true)
  .parse();

const context = new Context(args);

process.removeAllListeners('unhandledRejection');
process.on('unhandledRejection', reason => {
  if (reason !== undefined) {
    context.log.error(reason.message);
    context.log.error(reason.stack);
  }
  else {
    context.log.error('FATAL: unexpected unhandled promise rejection');
  }

  process.exit(1);
});

(async () => {
  await context.init();

  for (const dir of context.version.list) {
    context.log.print(`Upgrading from Kuzzle ${dir}...`);

    await require(`./.upgrades/versions/${dir}`)(context);
  }

  process.exit(0);
})();
