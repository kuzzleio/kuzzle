#!/usr/bin/env node

/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2015-2020 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

const fs = require('fs');
const Kuzzle = require('../lib/kuzzle');
const yargs = require('yargs');

function loadJson (filePath) {
  const rawData = fs.readFileSync(filePath, 'utf8');

  return JSON.parse(rawData);
}

async function startKuzzle (options = {}) {
  const kuzzle = new Kuzzle();
  const kuzzleParams = {};

  console.log('[ℹ] Starting Kuzzle server');

  if (options.mappings) {
    kuzzleParams.mappings = loadJson(options.mappings);
  }

  if (options.fixtures) {
    kuzzleParams.fixtures = loadJson(options.fixtures);
  }

  if (options.securities) {
    kuzzleParams.securities = loadJson(options.securities);
  }

  if (options.enablePlugins) {
    kuzzleParams.additionalPlugins = options.enablePlugins
      .trim()
      .split(',')
      .map(x => x.trim().replace(/(^")|("$)/g, ''));
  }

  try {
    await kuzzle.start(kuzzleParams)
    console.log(`[✔] Kuzzle server ${require('../package.json').version} ready`);

    const adminExists = await kuzzle.adminExists();

    if (! adminExists) {
      console.log('[!] [WARNING] There is no administrator user yet: everyone has administrator rights.');
      console.log('[ℹ] You can use the CLI or the admin console to create the first administrator user.');
      console.log('    For more information: https://docs.kuzzle.io/core/2/guides/essentials/security/');
    }
  }
  catch (error) {
    console.error(`[x] [ERROR] ${err.stack}`);
    process.exit(1);
  }
}

const options = yargs
  .usage('start-kuzzle-server [options]')
  .describe('fixtures', 'Import data from file')
  .describe('mappings', 'Apply mappings from file')
  .describe('securities', 'Import roles, profiles and users from file')
  .describe('vault-key', 'Vault key used to decrypt secrets')
  .describe('secrets-file', 'Output file to write decrypted secrets')
  .describe('enable-plugins', 'Enable plugins from "plugins/available" directory')
  .argv;

startKuzzle(options);

// Used for tests only
module.exports = startKuzzle;
