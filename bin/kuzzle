#!/usr/bin/env node

/*
 * Kuzzle, a backend software, self-hostable and ready to use
 * to power modern apps
 *
 * Copyright 2017 Kuzzle
 * mailto: support AT kuzzle.io
 * website: http://kuzzle.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This is the main entry when you type kuzzle start command
 *
 * If you want to run a Kuzzle instance using PM2,
 * take a look at the app-start.js file instead
 */
const program = require('commander');

program
  .version(require('../package.json').version)
  .option('-d, --debug', 'make errors more verbose')
  .option('-C, --noColors', 'do not use ANSI coloring');

// $ kuzzle createFirstAdmin
program
  .command('createFirstAdmin')
  .description('create the first administrator user')
  .action(require('./commands/createFirstAdmin'));

// $ kuzzle clearCache
program
  .command('clearCache')
  .description('clear internal caches in Redis')
  .action(require('./commands/clearCache'));

// $ kuzzle reset
program
  .command('reset')
  .description('delete Kuzzle configuration and users from database')
  .option('--fixtures <fixtures>', 'import fixtures from file')
  .option('--mappings <mappings>', 'load and apply mappings from file')
  .option('--noint', 'non interactive mode')
  .action(require('./commands/reset'));

// $ kuzzle start
program
  .command('start')
  .description('start a Kuzzle instance')
  .option('-p, --port <port>', 'Kuzzle port number', parseInt)
  .option('    --fixtures <fixtures>', 'import some fixtures from file')
  .option('    --mappings <mappings>', 'load and apply mappings from file')
  .action(require('./commands/start'));

// $ kuzzle createFirstAdmin
program
  .command('dump')
  .description('create a dump of current state of kuzzle')
  .action(require('./commands/dump'));

// Run user command
program.parse(process.argv);

/*
  Workaround for a bug in commander: program.args.length is empty if a sub-command is executed with
  a flag as the last option before an argument.
  For instance: "kuzzle install -a plugin" will incorrectly trigger the help and exit

  This is still true with commander v2.2
 */
if (program.rawArgs.length <= 2) {
  program.help();
}
