{
  "code": 4,
  "subdomains": {
    "format": {
      "code": 1,
      "errors" : {
        "invalid_plugins_dir": {
          "description": "The enabled plugins directory cannot be opened",
          "code": 1,
          "message": "Unable to read plugins directory \"%s\"; %s.",
          "class": "InternalError"
        },
        "cannot_load": {
          "description": "Kuzzle is unable to load a plugin",
          "code": 2,
          "message": "Unable to load plugin from path \"%s\"; %s.",
          "class": "PluginImplementationError"
        },
        "invalid_plugin_name": {
          "description": "Invalid characters in a plugin's name",
          "code": 3,
          "message": "[%s] Invalid plugin name. The name must be comprised only of letters, numbers, hyphens and underscores.",
          "class": "PluginImplementationError"
        },
        "invalid_privileged_property": {
          "description": "The 'privileged' property contains invalid characters",
          "code": 4,
          "message": "[%s] Invalid \"privileged\" property: expected a boolean, got a %s.",
          "class": "PluginImplementationError"
        },
        "missing_package_json": {
          "description": "The plugin is missing a 'package.json' file (run 'npm init' to create one)",
          "code": 5,
          "message": "[%s] No package.json file found.",
          "class": "PluginImplementationError"
        },
        "missing_package_name": {
          "description": "A 'name' property in the 'package.json' file is required by Kuzzle, as it is used as the plugin's unique name",
          "code": 6,
          "message": "[%s] No \"name\" property provided in package.json.",
          "class": "PluginImplementationError"
        },
        "invalid_hook": {
          "description": "A hook must point to either a function named directly exposed by the plugin, or a function. This error is thrown when a hook property is configured with neither of these values",
          "code": 7,
          "message": "Unable to configure a hook for the event \"%s\": \"%s\" should be a plugin method name, or a function. %s",
          "class": "PluginImplementationError"
        },
        "invalid_pipe": {
          "description": "A pipe must point to either a function named directly exposed by the plugin, or a function. This error is thrown when a hook property is configured with neither of these values",
          "code": 8,
          "message": "Unable to configure a pipe for the event \"%s\": \"%s\" should be a plugin method name, or a function. %s",
          "class": "PluginImplementationError"
        }
        "init_not_found": {
          "description": "The plugin does not have an 'init' function",
          "code": 9,
          "message": "Plugin \"%s\": No \"init\" method found.",
          "class": "PluginImplementationError"
        },
        "privileged_not_supported": {
          "description": "The 'privileged' flag has been set in Kuzzle's configuration for that plugin, but not in the plugin's manifest",
          "code": 10,
          "message": "The plugin \"%s\" is configured to run in privileged mode, but it does not seem to support it.",
          "class": "PluginImplementationError"
        },
        "privileged_not_set": {
          "description": "The 'privileged' flag has been set in the plugin's manifest file, but it needs also to be added in Kuzzle's configuration",
          "code": 11,
          "message": "The plugin \"%s\" needs to run in privileged mode to work, you have to explicitly set \"privileged: true\" in its configuration.",
          "class": "PluginImplementationError"
        },
        "expected_constructor": {
          "description": "Expected a class constructor",
          "code": 12,
          "message": "Plugin %s is not a constructor.",
          "class": "PluginImplementationError"
        },
        "name_already_exists": {
          "description": "Another plugin with the same name has already been loaded",
          "code": 13,
          "message": "A plugin named %s already exists",
          "class": "PluginImplementationError"
        },
      }
    },
    "runtime": {
      "code": 2,
      "errors": {
        "unavailable_realtime": {
          "description": "Due to technical limitations, plugins have limited access to the realtime API controller",
          "code": 1,
          "message": "The method \"realtime:%s\" is unavailable in plugins. Use a plugin hook instead.",
          "class": "PluginImplementationError"
        },
        "failed_init": {
          "description": "An exception was thrown by a plugin's init function",
          "code": 2,
          "message": "Something went wrong during initialization of \"%s\" plugin.",
          "class": "PluginImplementationError"
        },
        "unexpected_error": {
          "description": "Embeds an unexpected plugin errors into a standardized KuzzleError object",
          "code": 3,
          "message": "Caught an unexpected plugin error: %s",
          "class": "PluginImplementationError"
        },
        "pipe_timeout": {
          "description": "A pipe function execution exceeded the defined delay. If needed, the allowed delay can be extended in Kuzzle's configuration",
          "code": 4,
          "message": "Plugin \"%s\": Timeout error. Pipe for event \"%s\" exceeded the timeout delay (%sms). Aborting.",
          "class": "GatewayTimeoutError"
        },
        "missing_collection": {
          "code": 26,
          "message": "The collection must be specified.",
          "class": "PluginImplementationError"
        },
        "errors_configuration_file": {
          "code": 28,
          "message": "[%s] errors field in manifest.json badly formatted: %s",
          "class": "PluginImplementationError"
        },
        "invalid_user_object": {
          "code": 29,
          "message": "You must provide a valid User object when adding context with as().",
          "class": "PluginImplementationError"
        },
        "invalid_callback": {
          "code": 30,
          "message": "Invalid argument: Expected callback to be a function, received \"%s\".",
          "class": "PluginImplementationError"
        },
        "missing_request": {
          "code": 31,
          "message": "Invalid argument: a Request object must be supplied.",
          "class": "PluginImplementationError"
        },
        "missing_request_data": {
          "code": 32,
          "message": "A Request object and/or request data must be provided.",
          "class": "PluginImplementationError"
        },
      }
    },
    "strategy": {
      "code": 3,
      "errors" : {
        "missing_authenticators": {
          "code": 1,
          "message": "[%s] Strategy %s: dynamic strategy registration can only be done using an \"authenticator\" option (see https://tinyurl.com/y7boozbk).",
          "class": "PluginImplementationError"
        },
        "invalid_description": {
          "code": 2,
          "message": "%s expected the strategy description to be an object, got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_methods": {
          "code": 3,
          "message": "%s expected a \"methods\" property of type \"object\", got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_method_type": {
          "code": 4,
          "message": "%s expected a \"%s\" property of type \"string\", got: %s.",
          "class": "PluginImplementationError"
        },
        "missing_method_function": {
          "code": 5,
          "message": "%s the strategy method \"%s\" must point to an exposed function.",
          "class": "PluginImplementationError"
        },
        "invalid_property_type": {
          "code": 6,
          "message": "%s expected the \"%s\" property to be of type \"string\", got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_config": {
          "code": 7,
          "message": "%s expected a \"config\" property of type \"object\", got: %s.",
          "class": "PluginImplementationError"
        },
        "unexpected_constructor": {
          "code": 8,
          "message": "%s the \"authenticator\" and \"constructor\" parameters cannot both be set.",
          "class": "PluginImplementationError"
        },
        "invalid_constructor": {
          "code": 9,
          "message": "%s invalid \"constructor\" property value: constructor expected.",
          "class": "PluginImplementationError"
        },
        "invalid_authenticator": {
          "code": 10,
          "message": "%s expected an \"authenticator\" property of type \"string\", got: %s.",
          "class": "PluginImplementationError"
        },
        "unknown_authenticator": {
          "code": 11,
          "message": "%s unknown authenticator: %s.",
          "class": "PluginImplementationError"
        },
        "expected_object": {
          "code": 12,
          "message": "%s expected the \"%s\" property to be of type \"object\", got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_fields": {
          "code": 13,
          "message": "%s expected the \"fields\" property to be of type \"array\", got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_definition": {
          "code": 14,
          "message": "%s the exposed \"strategies\" plugin property must be a non-empty object.",
          "class": "PluginImplementationError"
        },
        "failed_registration": {
          "code": 15,
          "message": "Failed to register strategy \"%s\": %s",
          "class": "PluginImplementationError"
        },
        "expected_promise": {
          "code": 16,
          "message": "%s \"%s\" was expected to return a Promise, got: %s.",
          "class": "PluginImplementationError"
        },
        "invalid_result": {
          "code": 17,
          "message": "%s invalid authentication strategy result (expected an object).",
          "class": "PluginImplementationError"
        },
        "invalid_kuid": {
          "code": 18,
          "message": "%s invalid authentication kuid returned: expected a string, got a %s.",
          "class": "PluginImplementationError"
        },
        "unknown_kuid": {
          "code": 19,
          "message": "%s returned an unknown Kuzzle user identifier.",
          "class": "PluginImplementationError"
        },
        "unauthorized_removal": {
          "code": 20,
          "message": "Cannot remove strategy %s: owned by another plugin.",
          "class": "PluginImplementationError"
        },
        "strategy_not_found": {
          "code": 9,
          "message": "Cannot remove strategy %s: strategy does not exist.",
          "class": "NotFoundError"
        },
        "invalid_authenticators": {
          "code": 8,
          "message": "%s the exposed \"authenticators\" plugin property must be of type \"object\".",
          "class": "PluginImplementationError"
        },
        "invalid_authenticator": {
          "code": 9,
          "message": "%s invalid authenticator %s: expected a constructor.",
          "class": "PluginImplementationError"
        },
        "user_creation": {
          "description": "An authentication plugin rejected a user's credentials during their creation",
          "code": 10,
          "message": "An error occurred during the creation of user \"%s\":\n%s",
          "class": "PluginImplementationError"
        },
        "missing_user": {
          "description": "An authentication plugin approved credentials without providing a user object to Kuzzle",
          "code": 4,
          "message": "%s",
          "class": "UnauthorizedError"
        }
      }
    },
    "controller": {
      "code": 4,
      "errors": {
        "invalid_description": {
          "code": 1,
          "message": "%s Incorrect controller description type (expected object, got: \"%s\").",
          "class": "PluginImplementationError"
        },
        "invalid_action": {
          "code": 2,
          "message": "%s Action for \%s:%s\" is not a function. %s",
          "class": "PluginImplementationError"
        }
        "unknown_property": {
          "code": 3,
          "message": "%s Unknown property \"%s\" in route definition. %s",
          "class": "PluginImplementationError"
        },
        "cannot_be_empty": {
          "code": 4,
          "message": "%s \"%s\" must be a non-empty string.",
          "class": "PluginImplementationError"
        },
        "undefined_controller": {
          "code": 5,
          "message": "Undefined controller \"%s\". %s",
          "class": "PluginImplementationError"
        },
        "undefined_action": {
          "code": 6,
          "message": "Undefined action \"%s\". %s",
          "class": "PluginImplementationError"
        },
        "invalid_verb": {
          "code": 7,
          "message": "%s Only the following http verbs are allowed: \"%s\". %s",
          "class": "PluginImplementationError"
        },
        "unserializable_response": {
          "description": "A plugin controller action returned a non-serializable response",
          "code": 8,
          "message": "Unable to serialize response. Are you trying to return the request?",
          "class": "PluginImplementationError"
        },
        "expected_promise": {
          "description": "API actions added by plugins must return a promise",
          "code": 9,
          "message": "Unexpected return value from action \"%s:%s\": expected a Promise",
          "class": "PluginImplementationError"
        },
      }
    },
    "manifest": {
      "code": 5,
      "errors": {
        "cannot_load": {
          "code": 1,
          "message": "[%s] Unable to load the file 'manifest.json'.",
          "class": "PluginImplementationError"
        },
        "version_mismatch": {
          "code": 2,
          "message": "[%s/manifest.json] Version mismatch: current Kuzzle version %s does not match the manifest requirements (%s).",
          "class": "PluginImplementationError"
        },
        "invalid_name": {
          "code": 3,
          "message": "[%s/manifest.json] Invalid \"name\" property: expected a non-empty string.",
          "class": "PluginImplementationError"
        },
        "missing_name": {
          "code": 4,
          "message": "[%s/manifest.json] A \"name\" property is required.",
          "class": "PluginImplementationError"
        }
      }
    }
  }
}
