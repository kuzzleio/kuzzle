name: Main branches push checks

on:
  push:
    branches:
      - 2-dev

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/es-lint

  unit-tests:
    name: Unit Tests - Node.js v${{ matrix.node-version }}
    needs: [lint]
    strategy:
      matrix:
        node-version: ['14.17.0', '12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/unit-tests

  functional-tests-legacy:
    name: Functional Tests Legacy - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: ['http', 'websocket', 'mqtt']
        node-version: ['14.17.0', '12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:legacy:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  functional-tests:
    name: Functional Tests - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: [http, websocket]
        node-version: ['14.17.0', '12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  cluster-monkey-tests:
    name: Cluster Monkey Tests
    needs: [functional-tests-legacy, functional-tests]
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: ['14.17.0', '12.16.3', '12.20.0']
    steps:
      - uses: actions/checkout@v2
      - name: Cloning Monkey Tester
        uses: actions/checkout@v2
        with:
          repository: kuzzleio/kuzzle-monkey-tests
          path: 'kuzzle-monkey-tests'
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/monkey-tests
        with:
          node-version: ${{ matrix.node-version }}

  error-codes-check:
    name: Documentation - Error codes check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - name: Test error codes
        run: ./.ci/scripts/check-error-codes-documentation.sh

  documentation-staging:
    name: Deploy Documentation to staging
    needs: [error-codes-check]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/cache-node-modules
        with:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: ./.github/actions/deploy-doc
        with:
          REGION: us-west-2
          S3_BUCKET: docs-next.kuzzle.io
          CLOUDFRONT_ID: E2ZCCEK9GRB49U
          FRAMEWORK_BRANCH: develop
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          NODE_OPTIONS: --max-old-space-size=8096
