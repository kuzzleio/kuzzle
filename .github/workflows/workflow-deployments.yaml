name: Workflow Deployments

on:
  workflow_call:
    inputs:
      node_lts_maintenance_version:
        description: "Maintenance Node LTS Version"
        required: true
        default: "16"
        type: string

      node_lts_active_version:
        description: "Active Node LTS Version"
        required: true
        default: "18"
        type: string

      node_lts_current_version:
        description: "Current Node LTS Version"
        required: true
        default: "20"
        type: string

      docker_platforms:
        description: "Docker platforms"
        required: true
        default: "linux/amd64,linux/arm64"
        type: string
  workflow_dispatch:
    inputs:
      doc_deploy:
        description: "Deploy Documentation"
        required: true
        default: true
        type: boolean

      dockerhub_deploy:
        description: "Deploy to DockerHub"
        required: true
        default: true
        type: boolean

      npm_deploy:
        description: "Deploy to NPM"
        required: true
        default: true
        type: boolean

      node_lts_maintenance_version:
        description: "Maintenance Node LTS Version"
        required: true
        default: "16"
        type: string

      node_lts_active_version:
        description: "Active Node LTS Version"
        required: true
        default: "18"
        type: string

      node_lts_current_version:
        description: "Current Node LTS Version"
        required: true
        default: "20"
        type: string

      docker_platforms:
        description: "Docker platforms"
        required: true
        default: "linux/amd64,linux/arm64"
        type: string

jobs:
  # -----------------------------------------------------------------------------
  # Deployments: Documentation, Docker images, NPM package (only on git push)
  # -----------------------------------------------------------------------------
  doc-deploy:
    name: Documentation - Deploy
    if: ${{ (github.event_name != 'workflow_dispatch' || inputs.doc_deploy) && (github.ref_name == 'master' || github.ref_name == '2-dev') }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Extract references from context
        shell: bash
        id: extract-refs
        run: |
          echo "version=$(git describe --abbrev=0 --tags | cut -d. -f 1)" >> $GITHUB_OUTPUT
          echo "repo=$(echo $GITHUB_REPOSITORY | cut -d/ -f 2)" >> $GITHUB_OUTPUT

      - name: Trigger documentation workflow
        uses: convictional/trigger-workflow-and-wait@v1.6.3
        with:
          owner: kuzzleio
          repo: documentation
          github_token: ${{ secrets.ACCESS_TOKEN_CI }}
          workflow_file_name: child_repo.workflow.yml
          ref: ${{ github.ref_name == 'master' && 'master' || 'develop' }}
          client_payload: '{"repo_name":"${{ steps.extract-refs.outputs.repo }}","branch":"${{ github.head_ref }}","version":"${{ steps.extract-refs.outputs.version }}"}'

  dockerhub-deploy:
    name: Build and deploy images to Dockerhub
    if: ${{ (github.event_name != 'workflow_dispatch' || inputs.dockerhub_deploy) && github.ref_name == 'master' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install additional libraries
        uses: ./.github/actions/install-packages

      - name: Node version ${{ inputs.node_lts_active_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_lts_active_version }}
          cache: 'npm'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get current version from package.json
        shell: bash
        id: get-version
        run: |
          echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
          echo "major-version=$(jq -r .version package.json | cut -d. -f 1)" >> $GITHUB_OUTPUT

      - name: Build TS files
        run: |
          npm ci
          npm run build

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/images/kuzzle/Dockerfile
          push: true
          platforms: ${{ inputs.docker_platforms }}
          tags: kuzzleio/kuzzle:${{ steps.get-version.outputs.major-version }},kuzzleio/kuzzle:latest,kuzzleio/kuzzle:${{ steps.get-version.outputs.version }}

  npm-deploy:
    name: Build and deploy release on NPM.js
    if: ${{ (github.event_name != 'workflow_dispatch' || inputs.npm_deploy) && github.ref_name == 'master' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Install additional libraries
        uses: ./.github/actions/install-packages
      
      - name: Node version ${{ inputs.node_lts_active_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_lts_active_version }}
          registry-url: "https://registry.npmjs.org"
          cache: 'npm'

      - name: Install depedencies
        run: npm ci

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
