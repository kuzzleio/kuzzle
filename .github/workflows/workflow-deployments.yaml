name: Workflow Deployments

on: 
  push:
    branches:
      - master

jobs:
  # -----------------------------------------------------------------------------
  # Deployments: Documentation, Docker images, NPM package (only on git push)
  # -----------------------------------------------------------------------------
  doc-deploy:
    name: Documentation - Deploy
    runs-on: ubuntu-latest
    needs: [cluster-monkey-tests, error-codes-check]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install-packages
      - uses: actions/github-script@v4
        id: chose-documentation-framework-version
        with:
          script: |
            return context.ref === 'refs/heads/master' ? 'master' : 'develop'
      - name: Extract references from context
        shell: bash
        id: extract-refs
        run: |
          echo "::set-output name=version::$(git describe --abbrev=0 --tags | cut -d. -f 1)"
          echo "::set-output name=repo::$(echo $GITHUB_REPOSITORY | cut -d/ -f 2)"
          echo "::set-output name=branch::$(echo $GITHUB_REF | cut -d/ -f 3)"
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: kuzzleio
          repo: documentation
          github_token: ${{ secrets.ACCESS_TOKEN_CI }}
          workflow_file_name: child_repo.workflow.yml
          ref: ${{ steps.chose-documentation-framework-version.outputs.result }}
          inputs: '{"repo_name": "${{ steps.extract-refs.outputs.repo }}", "branch": "${{ steps.extract-refs.outputs.branch }}", "version": "${{ steps.extract-refs.outputs.version }}"}'

  dockerhub-deploy:
    name: Build and deploy images to Dockerhub
    needs: [cluster-monkey-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-packages
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LTS_CURRENT_VERSION }}
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get current version from package.json
        shell: bash
        id: get-version
        run: |
          echo "::set-output name=version::$(jq -r .version package.json)"
          echo "::set-output name=major-version::$(jq -r .version package.json | cut -d. -f 1)"
      - name: Build TS files
        run: |
          npm install
          npm run build-ts
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/images/kuzzle/Dockerfile
          push: true
          platforms: ${{ env.DOCKER_PLATFORMS }}
          tags: kuzzleio/kuzzle:${{ steps.get-version.outputs.major-version }},kuzzleio/kuzzle:latest,kuzzleio/kuzzle:${{ steps.get-version.outputs.version }}

  npm-deploy:
    name: Build and deploy release on NPM.js
    needs: [cluster-monkey-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-packages
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LTS_ACTIVE_VERSION }}
          registry-url: "https://registry.npmjs.org"
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
