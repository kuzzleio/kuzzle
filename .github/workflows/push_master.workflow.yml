name: Main branches push checks

on:
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/es-lint

  unit-tests:
    name: Unit Tests - Node.js v${{ matrix.node-version }}
    needs: [lint]
    strategy:
      matrix:
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/unit-tests

  functional-tests-legacy:
    name: Functional Tests Legacy - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: [http, websocket, mqtt, cluster]
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:legacy:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  functional-tests:
    name: Functional Tests - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: [http, websocket]
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  error-codes-check:
    name: Documentation - Error codes check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - name: Test error codes
        run: ./.ci/scripts/check-error-codes-documentation.sh

  documentation-production:
    name: Deploy Documentation to production
    needs: [functional-tests-legacy, functional-tests, functional-tests-cluster]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.cache/pip
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/deploy-doc
        with:
          REGION: us-west-2
          S3_BUCKET: docs.kuzzle.io
          CLOUDFRONT_ID: E3D6RP0POLCJMM
          FRAMEWORK_BRANCH: master
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  dockerhub-deploy:
    name: Build and deploy images to Dockerhub
    needs: [functional-tests-legacy, functional-tests, functional-tests-cluster]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.cache/pip
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get branch name
        # Github expose branch name with this format '/ref/branch/branchName'
        # So we need to extract the wanted part (branchName)
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: ./.github/actions/dockerhub
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          BRANCH: ${{ steps.extract_branch.outputs.branch }}

  npm-deploy:
    name: Build and deploy release on NPM.js
    needs: [functional-tests-legacy, functional-tests, functional-tests-cluster]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.cache/pip
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
