name: Pull request checks

on: [pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: "12"
      - uses: ./.github/actions/es-lint

  sonarcloud:
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - uses: martinbeentjes/npm-get-version-action@master
        id: package-version
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=kuzzleio
            -Dsonar.projectKey=kuzzleio_kuzzle
            -Dsonar.projectVersion=${{ steps.package-version.outputs.current-version}}
            -Dsonar.language=js
            -Dsonar.sources=lib/
            -Dsonar.cfamily.build-wrapper-output=bw-output 
            -Dsonar.verbose=true

  unit-tests:
    name: Unit Tests - Node.js v${{ matrix.node-version }}
    needs: ['lint']
    strategy:
      matrix:
        node-version: ['12.16', '12.18']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/unit-tests

  integration-tests-legacy:
    name: Integration Tests Legacy - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: ['unit-tests']
    strategy:
      matrix:
        test_set: ['http', 'websocket', 'mqtt']
        node-version: ['12.16', '12.18']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/integration-tests
        env:
          KUZZLE_FUNCTIONAL_TESTS: test:functional:legacy:${{ matrix.test_set }}
        with:
          docker-compose-test-file: ./.ci/test.yml

  integration-tests-sdk:
    name: Integration Tests SDK - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: ['unit-tests']
    strategy:
      matrix:
        test_set: ['http', 'websocket']
        node-version: ['12.16', '12.18']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/integration-tests
        env:
          KUZZLE_FUNCTIONAL_TESTS: test:functional:sdk:${{ matrix.test_set }}
        with:
          docker-compose-test-file: ./.ci/test.yml

  integration-tests-cluster:
    name: Integration Tests - Cluster - Node.js v${{ matrix.node-version }}
    needs: ['unit-tests']
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: ['12.16', '12.18']
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cluster legacy tests
        run: ./.ci/scripts/run-test-cluster.sh
          
  error-codes-check:
    name: Documentation - Error codes check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - name: Test error codes
        run: ./.ci/scripts/check-error-codes-documentation.sh