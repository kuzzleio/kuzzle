name: Pull request checks

on: [pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/es-lint

  unit-tests:
    name: Unit Tests - Node.js v${{ matrix.node-version }}
    needs: [lint]
    strategy:
      matrix:
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: ./.github/actions/unit-tests

  functional-tests-legacy:
    name: Functional Tests Legacy - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: [http, websocket, mqtt, cluster]
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:legacy:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  functional-tests:
    name: Functional Tests - ${{ matrix.test_set }} - Node.js v${{ matrix.node-version }}
    needs: [unit-tests]
    strategy:
      matrix:
        test_set: [http, websocket]
        node-version: ['12.16.3', '12.20.0']
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: ./.github/actions/functional-tests
        with:
          test-set: test:functional:${{ matrix.test_set }}
          node-version: ${{ matrix.node-version }}

  error-codes-check:
    name: Documentation - Error codes check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - name: Test error codes
        run: ./.ci/scripts/check-error-codes-documentation.sh
